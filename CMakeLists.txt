cmake_minimum_required(VERSION 2.8)

PROJECT(dmfunction)

IF (WIN32)  
    MESSAGE(STATUS "Now is windows")

    SET(DMOS_NAME "win")

    SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11" )    
ELSEIF (APPLE)  
    MESSAGE(STATUS "Now is Apple systems")  

    SET(DMOS_NAME "mac") 

    SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread" )
ELSEIF (UNIX)  
    MESSAGE(STATUS "Now is UNIX-like OS")  
 
    SET(DMOS_NAME "lin") 
    
    SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11 -pthread" )    
ENDIF ()

INCLUDE(FindPkgConfig)
PKG_CHECK_MODULES(LIBCLANG REQUIRED libclang)

link_directories(${LIBCLANG_LIBRARY_DIRS})

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/depends/fmt)
INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/depends/mysql-connector-cpp)

LINK_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/lib/${DMOS_NAME})

SET(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/bin)
SET(LIBRARY_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/lib/${DMOS_NAME})

FILE(GLOB SOURCES
    ${CMAKE_CURRENT_SOURCE_DIR}/src/PrintFunctionNames.cc)

ADD_EXECUTABLE(dmfunctiontest ${SOURCES})
TARGET_LINK_LIBRARIES(dmfunctiontest ${LIBCLANG_LIBRARIES})
